// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: proto/chitchat.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     uint64                 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_proto_chitchat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chitchat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_proto_chitchat_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectRequest) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ConnectRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type ConnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     uint64                 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	mi := &file_proto_chitchat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chitchat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_proto_chitchat_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectResponse) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ConnectResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type StreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     uint64                 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	mi := &file_proto_chitchat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chitchat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_chitchat_proto_rawDescGZIP(), []int{2}
}

func (x *StreamRequest) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StreamRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *StreamRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StreamResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Timestamp uint64                 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Event:
	//
	//	*StreamResponse_ChatMessage
	//	*StreamResponse_LoginEvent
	//	*StreamResponse_LogoutEvent
	Event         isStreamResponse_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamResponse) Reset() {
	*x = StreamResponse{}
	mi := &file_proto_chitchat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResponse) ProtoMessage() {}

func (x *StreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chitchat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResponse.ProtoReflect.Descriptor instead.
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_chitchat_proto_rawDescGZIP(), []int{3}
}

func (x *StreamResponse) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StreamResponse) GetEvent() isStreamResponse_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *StreamResponse) GetChatMessage() *StreamResponse_Message {
	if x != nil {
		if x, ok := x.Event.(*StreamResponse_ChatMessage); ok {
			return x.ChatMessage
		}
	}
	return nil
}

func (x *StreamResponse) GetLoginEvent() *StreamResponse_Login {
	if x != nil {
		if x, ok := x.Event.(*StreamResponse_LoginEvent); ok {
			return x.LoginEvent
		}
	}
	return nil
}

func (x *StreamResponse) GetLogoutEvent() *StreamResponse_Logout {
	if x != nil {
		if x, ok := x.Event.(*StreamResponse_LogoutEvent); ok {
			return x.LogoutEvent
		}
	}
	return nil
}

type isStreamResponse_Event interface {
	isStreamResponse_Event()
}

type StreamResponse_ChatMessage struct {
	ChatMessage *StreamResponse_Message `protobuf:"bytes,2,opt,name=chat_message,json=chatMessage,proto3,oneof"`
}

type StreamResponse_LoginEvent struct {
	LoginEvent *StreamResponse_Login `protobuf:"bytes,3,opt,name=login_event,json=loginEvent,proto3,oneof"`
}

type StreamResponse_LogoutEvent struct {
	LogoutEvent *StreamResponse_Logout `protobuf:"bytes,4,opt,name=logout_event,json=logoutEvent,proto3,oneof"`
}

func (*StreamResponse_ChatMessage) isStreamResponse_Event() {}

func (*StreamResponse_LoginEvent) isStreamResponse_Event() {}

func (*StreamResponse_LogoutEvent) isStreamResponse_Event() {}

type StreamResponse_Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamResponse_Message) Reset() {
	*x = StreamResponse_Message{}
	mi := &file_proto_chitchat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamResponse_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResponse_Message) ProtoMessage() {}

func (x *StreamResponse_Message) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chitchat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResponse_Message.ProtoReflect.Descriptor instead.
func (*StreamResponse_Message) Descriptor() ([]byte, []int) {
	return file_proto_chitchat_proto_rawDescGZIP(), []int{3, 0}
}

func (x *StreamResponse_Message) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *StreamResponse_Message) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StreamResponse_Login struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamResponse_Login) Reset() {
	*x = StreamResponse_Login{}
	mi := &file_proto_chitchat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamResponse_Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResponse_Login) ProtoMessage() {}

func (x *StreamResponse_Login) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chitchat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResponse_Login.ProtoReflect.Descriptor instead.
func (*StreamResponse_Login) Descriptor() ([]byte, []int) {
	return file_proto_chitchat_proto_rawDescGZIP(), []int{3, 1}
}

func (x *StreamResponse_Login) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type StreamResponse_Logout struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamResponse_Logout) Reset() {
	*x = StreamResponse_Logout{}
	mi := &file_proto_chitchat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamResponse_Logout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResponse_Logout) ProtoMessage() {}

func (x *StreamResponse_Logout) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chitchat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResponse_Logout.ProtoReflect.Descriptor instead.
func (*StreamResponse_Logout) Descriptor() ([]byte, []int) {
	return file_proto_chitchat_proto_rawDescGZIP(), []int{3, 2}
}

func (x *StreamResponse_Logout) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

var File_proto_chitchat_proto protoreflect.FileDescriptor

const file_proto_chitchat_proto_rawDesc = "" +
	"\n" +
	"\x14proto/chitchat.proto\x12\x05proto\"J\n" +
	"\x0eConnectRequest\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x04R\ttimestamp\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\"E\n" +
	"\x0fConnectResponse\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x04R\ttimestamp\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"]\n" +
	"\rStreamRequest\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x04R\ttimestamp\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\x8a\x03\n" +
	"\x0eStreamResponse\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x04R\ttimestamp\x12B\n" +
	"\fchat_message\x18\x02 \x01(\v2\x1d.proto.StreamResponse.MessageH\x00R\vchatMessage\x12>\n" +
	"\vlogin_event\x18\x03 \x01(\v2\x1b.proto.StreamResponse.LoginH\x00R\n" +
	"loginEvent\x12A\n" +
	"\flogout_event\x18\x04 \x01(\v2\x1c.proto.StreamResponse.LogoutH\x00R\vlogoutEvent\x1a?\n" +
	"\aMessage\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x1a#\n" +
	"\x05Login\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x1a$\n" +
	"\x06Logout\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busernameB\a\n" +
	"\x05event2\x86\x01\n" +
	"\x0fChitChatService\x128\n" +
	"\aConnect\x12\x15.proto.ConnectRequest\x1a\x16.proto.ConnectResponse\x129\n" +
	"\x06Stream\x12\x14.proto.StreamRequest\x1a\x15.proto.StreamResponse(\x010\x01B$Z\"github.com/augustlh/chitchat/protob\x06proto3"

var (
	file_proto_chitchat_proto_rawDescOnce sync.Once
	file_proto_chitchat_proto_rawDescData []byte
)

func file_proto_chitchat_proto_rawDescGZIP() []byte {
	file_proto_chitchat_proto_rawDescOnce.Do(func() {
		file_proto_chitchat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_chitchat_proto_rawDesc), len(file_proto_chitchat_proto_rawDesc)))
	})
	return file_proto_chitchat_proto_rawDescData
}

var file_proto_chitchat_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_chitchat_proto_goTypes = []any{
	(*ConnectRequest)(nil),         // 0: proto.ConnectRequest
	(*ConnectResponse)(nil),        // 1: proto.ConnectResponse
	(*StreamRequest)(nil),          // 2: proto.StreamRequest
	(*StreamResponse)(nil),         // 3: proto.StreamResponse
	(*StreamResponse_Message)(nil), // 4: proto.StreamResponse.Message
	(*StreamResponse_Login)(nil),   // 5: proto.StreamResponse.Login
	(*StreamResponse_Logout)(nil),  // 6: proto.StreamResponse.Logout
}
var file_proto_chitchat_proto_depIdxs = []int32{
	4, // 0: proto.StreamResponse.chat_message:type_name -> proto.StreamResponse.Message
	5, // 1: proto.StreamResponse.login_event:type_name -> proto.StreamResponse.Login
	6, // 2: proto.StreamResponse.logout_event:type_name -> proto.StreamResponse.Logout
	0, // 3: proto.ChitChatService.Connect:input_type -> proto.ConnectRequest
	2, // 4: proto.ChitChatService.Stream:input_type -> proto.StreamRequest
	1, // 5: proto.ChitChatService.Connect:output_type -> proto.ConnectResponse
	3, // 6: proto.ChitChatService.Stream:output_type -> proto.StreamResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_chitchat_proto_init() }
func file_proto_chitchat_proto_init() {
	if File_proto_chitchat_proto != nil {
		return
	}
	file_proto_chitchat_proto_msgTypes[3].OneofWrappers = []any{
		(*StreamResponse_ChatMessage)(nil),
		(*StreamResponse_LoginEvent)(nil),
		(*StreamResponse_LogoutEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_chitchat_proto_rawDesc), len(file_proto_chitchat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_chitchat_proto_goTypes,
		DependencyIndexes: file_proto_chitchat_proto_depIdxs,
		MessageInfos:      file_proto_chitchat_proto_msgTypes,
	}.Build()
	File_proto_chitchat_proto = out.File
	file_proto_chitchat_proto_goTypes = nil
	file_proto_chitchat_proto_depIdxs = nil
}
